{"version":3,"sources":["Components/Main/Login/Login.jsx"],"names":["Captcha","props","src","captchaURL","onclick","getCaptcha","name","component","FormElementCreator","types","type","LoginReduxForm","reduxForm","form","onSubmit","handleSubmit","validate","required","captcha","error","connect","state","isAuth","auth","loginThunkCreator","to","className","classes","login","formData","email","password","rememberMe"],"mappings":"8HAAA,uGA0CIA,EAAU,SAACC,GACd,OACC,6BACC,mDACA,iCAAM,yBAAKC,IAAKD,EAAME,aAAtB,IAAqC,4BAAQC,QAAWH,EAAMI,YAAzB,mBACrC,iCAAM,kBAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWC,IAAoBC,MAAM,QAAQC,KAAK,YAK7EC,EAAiBC,YAAU,CAC9BC,KAAK,SADeD,EAvBL,SAACX,GAChB,OACC,0BAAMa,SAAYb,EAAMc,cACvB,6BAAK,kBAAC,IAAD,CAAOT,KAAK,QAAQC,UAAWC,IAAoBC,MAAM,QAAQC,KAAO,QAAQM,SAAU,CAACC,QAChG,6BAAK,kBAAC,IAAD,CAAOX,KAAK,WAAWC,UAAWC,IAAoBC,MAAM,QAAQC,KAAO,WAAWM,SAAU,CAACC,QACtG,6BAAK,kBAAC,IAAD,CAAOX,KAAK,eAAeC,UAAWC,IAAoBC,MAAM,QAAQC,KAAK,aAAlF,eACET,EAAMiB,SAAW,kBAAClB,EAAD,CAASG,WAAYF,EAAMiB,QAASb,WAAYJ,EAAMI,aACvEJ,EAAMkB,OAAS,iCAAOlB,EAAMkB,OAC9B,6BAAK,8CA0BOC,uBAPO,SAACC,GACtB,MAAM,CACLC,OAAOD,EAAME,KAAKD,OAClBJ,QAAQG,EAAME,KAAKL,WAImB,CAACM,sBAAmBnB,gBAA7Ce,EArDH,SAACnB,GAKZ,OAAGA,EAAMqB,OAEP,kBAAC,IAAD,CAAUG,GAAG,aAKd,yBAAKC,UAAaC,IAAQC,OACzB,uCACA,kBAACjB,EAAD,CAAgBG,SAbH,SAACe,GACf5B,EAAMuB,kBAAkBK,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASX,UAYnDI,OAAQrB,EAAMqB,OAAQJ,QAASjB,EAAMiB,QAASb,WAAYJ,EAAMI","file":"static/js/3.216e54d1.chunk.js","sourcesContent":["import React from 'react';\r\nimport classes from './Login.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {FormElementCreator} from './../../OptionalComponents/FormControls/Textarea';\r\nimport {required} from './../../../Utils/Validators/Validator'\r\nimport {loginThunkCreator, getCaptcha} from './../../../Redux/authReducer'\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nlet Login = (props) =>{\r\n\tlet onSubmit = (formData)=>{\r\n\t\tprops.loginThunkCreator(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n\t}\r\n\t\r\n\tif(props.isAuth){\r\n\t\treturn(\r\n\t\t\t<Redirect to='/profile' />\r\n\t\t)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<div className = {classes.login}>\r\n\t\t\t<h1> LOGIN </h1>\r\n\t\t\t<LoginReduxForm onSubmit ={onSubmit} isAuth={props.isAuth} captcha={props.captcha} getCaptcha={props.getCaptcha} />\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nlet LoginForm = (props) =>{\r\n\treturn(\r\n\t\t<form onSubmit = {props.handleSubmit}>\r\n\t\t\t<div><Field name=\"email\" component={FormElementCreator} types=\"input\" type = 'email' validate={[required]}/></div>\r\n\t\t\t<div><Field name=\"password\" component={FormElementCreator} types=\"input\" type = 'password' validate={[required]}/></div>\r\n\t\t\t<div><Field name=\"isRememberMe\" component={FormElementCreator} types=\"input\" type=\"checkbox\" />Remember me</div>\r\n\t\t\t\t{props.captcha && <Captcha captchaURL={props.captcha} getCaptcha={props.getCaptcha} />}\r\n\t\t\t\t{props.error && <div> {props.error}</div>}\r\n\t\t\t<div><button>Enter</button></div>\r\n\t\t</form>\r\n\t)\r\n}\r\n\r\nlet Captcha = (props)=>{\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t<span> Anty-bot system </span>\r\n\t\t\t<div> <img src={props.captchaURL} /> <button onclick = {props.getCaptcha}>Reload Captcha</button></div>\r\n\t\t\t<div> <Field name='captcha' component={FormElementCreator} types='input' type='text' /></div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nlet LoginReduxForm = reduxForm({\r\n\tform:'login'\r\n})(LoginForm);\r\n\r\nlet mapStateToProps = (state) =>{\r\n\treturn{\r\n\t\tisAuth:state.auth.isAuth,\r\n\t\tcaptcha:state.auth.captcha,\r\n\t}\r\n}\r\n\r\nexport default connect(mapStateToProps, {loginThunkCreator, getCaptcha})(Login);"],"sourceRoot":""}